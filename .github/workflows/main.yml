# comment
name: Run Python Code and Generate Report

on:
  push:
    branches:
      - master  # Runs the workflow on push to main branch
  pull_request:
    branches:
      - master  # Also runs the workflow on pull requests to main

jobs:
  build:
    runs-on: ubuntu-latest  # GitHub Actions runs on Linux environments like Ubuntu by default

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.8'  # Specify the Python version

      # Step 3: Install dependencies (if you have a requirements.txt file)
      - name: Install Dependencies
        run: |
          if [ -f "requirements.txt" ]; then pip install -r requirements.txt; fi

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install ChromeDriver
        run: |
          CHROME_DRIVER_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)
          wget -N https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip -P ~/
          unzip ~/chromedriver_linux64.zip -d ~/
          sudo mv -f ~/chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver


      # Step 4: Run the Python script
      - name: Run Python Code
        run: python Senario_1.py  # Replace with your Python file name

      # Step 5: Generate HTML Report
      - name: Generate HTML Report
        run: |
          mkdir -p artifacts
          python Senario_1.py > artifacts/report.html  # Redirect output to an HTML file (customize as needed)

      # Step 6: Upload the report as an artifact
      - name: Upload HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: python-report
          path: artifacts/report.html
